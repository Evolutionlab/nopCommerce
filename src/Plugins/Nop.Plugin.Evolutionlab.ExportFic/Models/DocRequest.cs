// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Cnvr.FatInCloud.Models;
//
//    var ordini = Ordini.FromJson(jsonString);

using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Nop.Plugin.Evolutionlab.ExportFic.Models
{
    public partial class DocRequest : BaseRequest
    {

        //[JsonProperty("id_cliente")]
        //public string IdCliente { get; set; }

        [JsonProperty("id_fornitore")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long IdFornitore { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("token")]
        public string Token { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("indirizzo_via")]
        public string IndirizzoVia { get; set; }

        [JsonProperty("indirizzo_cap")]
        public string IndirizzoCap { get; set; }

        [JsonProperty("indirizzo_citta")]
        public string IndirizzoCitta { get; set; }

        [JsonProperty("indirizzo_provincia")]
        public string IndirizzoProvincia { get; set; }

        [JsonProperty("indirizzo_extra")]
        public string IndirizzoExtra { get; set; }

        [JsonProperty("paese")]
        public string Paese { get; set; }

        [JsonProperty("paese_iso")]
        public string PaeseIso { get; set; }

        [JsonProperty("lingua")]
        public string Lingua { get; set; }

        [JsonProperty("piva")]
        public string Piva { get; set; }

        [JsonProperty("cf")]
        public string Cf { get; set; }

        [JsonProperty("autocompila_anagrafica")]
        public bool AutocompilaAnagrafica { get; set; }

        [JsonProperty("salva_anagrafica")]
        public bool SalvaAnagrafica { get; set; }

        [JsonProperty("numero")]
        public string Numero { get; set; }

        [JsonProperty("data")]
        public string Data { get; set; }

        [JsonProperty("valuta")]
        public string Valuta { get; set; }

        [JsonProperty("valuta_cambio")]
        public double ValutaCambio { get; set; }

        [JsonProperty("prezzi_ivati")]
        public bool PrezziIvati { get; set; }

        [JsonProperty("rivalsa")]
        public double Rivalsa { get; set; }

        [JsonProperty("cassa")]
        public double Cassa { get; set; }

        [JsonProperty("rit_acconto")]
        public double RitAcconto { get; set; }

        [JsonProperty("imponibile_ritenuta")]
        public double ImponibileRitenuta { get; set; }

        [JsonProperty("rit_altra")]
        public double RitAltra { get; set; }

        [JsonProperty("marca_bollo")]
        public double MarcaBollo { get; set; }

        [JsonProperty("oggetto_visibile")]
        public string OggettoVisibile { get; set; }

        [JsonProperty("oggetto_interno")]
        public string OggettoInterno { get; set; }

        [JsonProperty("centro_ricavo")]
        public string CentroRicavo { get; set; }

        [JsonProperty("centro_costo")]
        public string CentroCosto { get; set; }

        [JsonProperty("note")]
        public string Note { get; set; }

        [JsonProperty("nascondi_scadenza")]
        public bool NascondiScadenza { get; set; }

        [JsonProperty("ddt")]
        public bool Ddt { get; set; }

        [JsonProperty("ftacc")]
        public bool Ftacc { get; set; }

        [JsonProperty("id_template")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long IdTemplate { get; set; }

        [JsonProperty("ddt_id_template")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long DdtIdTemplate { get; set; }

        [JsonProperty("ftacc_id_template")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FtaccIdTemplate { get; set; }

        [JsonProperty("mostra_info_pagamento")]
        public bool MostraInfoPagamento { get; set; }

        [JsonProperty("metodo_pagamento")]
        public string MetodoPagamento { get; set; }

        [JsonProperty("metodo_titoloN")]
        public string MetodoTitoloN { get; set; }

        [JsonProperty("metodo_descN")]
        public string MetodoDescN { get; set; }

        [JsonProperty("mostra_totali")]
        public string MostraTotali { get; set; }

        [JsonProperty("mostra_bottone_paypal")]
        public bool MostraBottonePaypal { get; set; }

        [JsonProperty("mostra_bottone_bonifico")]
        public bool MostraBottoneBonifico { get; set; }

        [JsonProperty("mostra_bottone_notifica")]
        public bool MostraBottoneNotifica { get; set; }

        [JsonProperty("lista_articoli")]
        public List<ListaArticoli> ListaArticoli { get; set; }

        [JsonProperty("lista_pagamenti")]
        public List<ListaPagamenti> ListaPagamenti { get; set; }

        [JsonProperty("ddt_numero")]
        public string DdtNumero { get; set; }

        [JsonProperty("ddt_data")]
        public string DdtData { get; set; }

        [JsonProperty("ddt_colli")]
        public string DdtColli { get; set; }

        [JsonProperty("ddt_peso")]
        public string DdtPeso { get; set; }

        [JsonProperty("ddt_causale")]
        public string DdtCausale { get; set; }

        [JsonProperty("ddt_luogo")]
        public string DdtLuogo { get; set; }

        [JsonProperty("ddt_trasportatore")]
        public string DdtTrasportatore { get; set; }

        [JsonProperty("ddt_annotazioni")]
        public string DdtAnnotazioni { get; set; }

        [JsonProperty("PA")]
        public bool Pa { get; set; }

        [JsonProperty("PA_tipo_cliente")]
        public string PaTipoCliente { get; set; }

        [JsonProperty("PA_tipo")]
        public string PaTipo { get; set; }

        [JsonProperty("PA_numero")]
        public string PaNumero { get; set; }

        [JsonProperty("PA_data")]
        public string PaData { get; set; }

        [JsonProperty("PA_cup")]
        public string PaCup { get; set; }

        [JsonProperty("PA_cig")]
        public string PaCig { get; set; }

        [JsonProperty("PA_codice")]
        public string PaCodice { get; set; }

        [JsonProperty("PA_pec")]
        public string PaPec { get; set; }

        [JsonProperty("PA_esigibilita")]
        public string PaEsigibilita { get; set; }

        [JsonProperty("PA_modalita_pagamento")]
        public string PaModalitaPagamento { get; set; }

        [JsonProperty("PA_istituto_credito")]
        public string PaIstitutoCredito { get; set; }

        [JsonProperty("PA_iban")]
        public string PaIban { get; set; }

        [JsonProperty("PA_beneficiario")]
        public string PaBeneficiario { get; set; }

        [JsonProperty("extra_anagrafica")]
        public ExtraAnagrafica ExtraAnagrafica { get; set; }

        [JsonProperty("split_payment")]
        public bool SplitPayment { get; set; }
    }

    public partial class ExtraAnagrafica
    {
        [JsonProperty("mail")]
        public string Mail { get; set; }

        [JsonProperty("tel")]
        public string Tel { get; set; }

        [JsonProperty("fax")]
        public string Fax { get; set; }
    }

    public partial class ListaArticoli
    {
        [JsonProperty("id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("codice")]
        public string Codice { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("um")]
        public string Um { get; set; }

        [JsonProperty("quantita")]
        public long Quantita { get; set; }

        [JsonProperty("descrizione")]
        public string Descrizione { get; set; }

        [JsonProperty("categoria")]
        public string Categoria { get; set; }

        [JsonProperty("prezzo_netto")]
        public double PrezzoNetto { get; set; }

        [JsonProperty("prezzo_lordo")]
        public double PrezzoLordo { get; set; }

        [JsonProperty("cod_iva")]
        public long CodIva { get; set; }

        [JsonProperty("tassabile")]
        public bool Tassabile { get; set; }

        [JsonProperty("sconto")]
        public double Sconto { get; set; }

        [JsonProperty("applica_ra_contributi")]
        public bool ApplicaRaContributi { get; set; }

        [JsonProperty("ordine")]
        public long Ordine { get; set; }

        [JsonProperty("sconto_rosso")]
        public double ScontoRosso { get; set; }

        [JsonProperty("in_ddt")]
        public bool InDdt { get; set; }

        [JsonProperty("magazzino")]
        public bool Magazzino { get; set; }
    }

    public partial class ListaPagamenti
    {
        [JsonProperty("data_scadenza")]
        public string DataScadenza { get; set; }

        [JsonProperty("importo")]
        public double Importo { get; set; }

        [JsonProperty("metodo")]
        public string Metodo { get; set; }

        [JsonProperty("data_saldo")]
        public string DataSaldo { get; set; }
    }

    public partial class DocRequest
    {
        public static DocRequest FromJson(string json) => JsonConvert.DeserializeObject<DocRequest>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this DocRequest self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}